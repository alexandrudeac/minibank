name: Minibank CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - id: checkout
        name: Checkout Source Code
        uses: actions/checkout@v4
      - id: install-go
        name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24.0
      - id: install-go-migrate
        name: Install Go Migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.2/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/migrate
          which migrate
      - id: make-migrate
        name: Run DB Migrations
        run: make migrateup
      - id: install-go-sqlc
        name: Install SQLc
        run: |
          curl -sSL https://github.com/sqlc-dev/sqlc/releases/download/v1.28.0/sqlc_1.28.0_linux_amd64.tar.gz | tar -xz
          sudo mv sqlc /usr/bin/sqlc
          which sqlc
      - id: make-sqlc
        name: Run SQLc code generation
        run: make sqlc
      - id: make-test
        name: Run Unit Tests
        run: make test
      - id: report-coverage
        name: Report Coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          profile: build/coverage/coverage.out
          local-prefix: github.com/${{github.repository}}
          threshold-total: 75
          git-token: ${{ github.ref_name == 'main' && secrets.GITHUB_TOKEN || '' }}
          git-branch: badges

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: minibank
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


